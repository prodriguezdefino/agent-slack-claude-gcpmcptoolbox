logging:
    level:
        org.springframework.web: DEBUG
        org.springframework.core.codec: DEBUG
        org.springframework.ai: DEBUG
slack:
    botToken: ${SLACK_BOT_TOKEN:}
    signingSecret: ${SLACK_SIGNING_SECRET:}
# Spring Boot Actuator - GCP uses /health
management:
    endpoints:
        web:
            exposure:
                include: health,info
    endpoint:
        health:
            show-details: always
# Server port (useful for local testing, GCP Cloud Functions can use this as well)
server:
    port: 8080
spring:
    # web clients that interact will LLM needs more patience
    webflux:
        client:
            connect-timeout: 5s
            response-timeout: 200s
    # Claude API Configuration
    ai:
        anthropic:
            api-key: ${CLAUDE_API_KEY:}
            chat:
                options:
                    model: claude-opus-4-20250514
                    temperature: 0.7
                    max-tokens: 450
        mcp:
            client:
                request-timeout: 100s
                toolcallback:
                    enabled: true
                sse:
                    connections:
                        gcptoolbox:
                            url: ${MCPTOOLBOX_URL:}
                            sse-endpoint: /mcp/sse
